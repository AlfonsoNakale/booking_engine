{"mappings":"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","sources":["js/app.js","js/datePicker.js","js/bookingDetails.js","js/pricingCalculation.js","js/formValidation.js"],"sourcesContent":["\"use strict\";\n\n// app.js - Global JavaScript functionality for all pages\nimport { initializeDatePickers } from \"./datePicker.js\";\nimport { initializeFormValidation } from \"./formValidation.js\";\nimport { initializePricingCalculation } from \"./pricingCalculation.js\";\nimport { initializeBookingDetails } from \"./bookingDetails.js\";\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  initializeDatePickers();\n  initializeBookingDetails();\n  initializeFormValidation();\n  initializePricingCalculation();\n});\n","import flatpickr from \"flatpickr\";\nimport { updateBookingDetails } from \"./bookingDetails.js\";\n\nlet pickupPicker, returnPicker;\n\n/**\n * Initializes date pickers for pickup and return dates\n * Sets up configuration and event handlers\n */\nexport function initializeDatePickers() {\n  const today = new Date();\n  const fiveDaysLater = new Date(today);\n  fiveDaysLater.setDate(today.getDate() + 5);\n\n  const commonConfig = {\n    enableTime: false,\n    dateFormat: \"Y-m-d\",\n    minDate: \"today\",\n    disable: [(date) => date < today],\n    onChange: updateBookingDetails,\n  };\n\n  pickupPicker = createDatePicker(\"#datetimes-pickup\", {\n    ...commonConfig,\n    defaultDate: today,\n    onClose: handlePickupDateClose,\n  });\n\n  returnPicker = createDatePicker(\"#datetimes-return\", {\n    ...commonConfig,\n    defaultDate: fiveDaysLater,\n    minDate: fiveDaysLater,\n    onClose: updateBookingDetails,\n  });\n\n  pickupPicker.setDate(today);\n  returnPicker.setDate(fiveDaysLater);\n\n  updateBookingDetails();\n}\n\n/**\n * Creates a date picker instance with input validation\n * @param {string} selector - CSS selector for the input element\n * @param {Object} config - Configuration options for flatpickr\n * @returns {Object} Configured flatpickr instance\n */\nfunction createDatePicker(selector, config) {\n  const picker = flatpickr(selector, config);\n  const input = document.querySelector(selector);\n\n  input.addEventListener(\"input\", () => validateManualDateInput(input, picker));\n\n  return picker;\n}\n\n/**\n * Handles closing of pickup date picker\n * Updates return date minimum based on selected pickup date\n * @param {Array} selectedDates - Array of selected dates from flatpickr\n */\nfunction handlePickupDateClose(selectedDates) {\n  if (selectedDates[0]) {\n    const minReturnDate = new Date(selectedDates[0]);\n    minReturnDate.setDate(minReturnDate.getDate() + 1);\n    returnPicker.set(\"minDate\", minReturnDate);\n\n    if (\n      returnPicker.selectedDates[0] &&\n      returnPicker.selectedDates[0] < minReturnDate\n    ) {\n      returnPicker.setDate(minReturnDate);\n    }\n  }\n  updateBookingDetails();\n}\n\n/**\n * Validates manually entered dates\n * Ensures dates are in correct format and not in the past\n * @param {HTMLElement} input - Date input element\n * @param {Object} picker - Flatpickr instance\n */\nfunction validateManualDateInput(input, picker) {\n  const dateValue = input.value;\n  const parsedDate = flatpickr.parseDate(dateValue, \"Y-m-d\");\n\n  if (parsedDate && parsedDate >= new Date()) {\n    picker.setDate(parsedDate);\n  } else {\n    input.value = \"\";\n    alert(\n      \"Please enter a valid date in YYYY-MM-DD format, not earlier than today.\"\n    );\n  }\n}\n\n/**\n * Updates the display of a date element\n * @param {string} elementId - ID of element to update\n * @param {Date} date - Date to display\n */\nfunction updateDateDisplay(elementId, date) {\n  const element = document.getElementById(elementId);\n  if (element) {\n    element.textContent = date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  }\n}\n","import flatpickr from \"flatpickr\";\nimport {\n  updatePricing,\n  calculateTotal,\n  formatPrice,\n  getState,\n  handlePickupConfirmationChange,\n} from \"./pricingCalculation.js\";\n\n/**\n * Creates a memoized version of a function to cache results\n * @param {Function} fn - Function to memoize\n * @returns {Function} Memoized function\n */\nconst memoize = (fn) => {\n  const cache = new Map();\n  return (...args) => {\n    const key = JSON.stringify(args);\n    if (cache.has(key)) return cache.get(key);\n    const result = fn.apply(this, args);\n    cache.set(key, result);\n    return result;\n  };\n};\n\n/**\n * Calculates the duration between two dates in days\n * Memoized to improve performance for repeated calculations\n * @param {Date} pickupDate - Start date\n * @param {Date} returnDate - End date\n * @returns {number} Number of days between dates (minimum 1)\n */\nconst calculateDurationDays = memoize((pickupDate, returnDate) => {\n  if (!pickupDate || !returnDate) return 0;\n  const durationMs =\n    returnDate.setHours(0, 0, 0, 0) - pickupDate.setHours(0, 0, 0, 0);\n  return Math.max(1, Math.ceil(durationMs / (1000 * 60 * 60 * 24)));\n});\n\n/**\n * Main function to update all booking details\n * Calls various update functions to refresh the UI\n */\nexport function updateBookingDetails() {\n  calculateDuration();\n  updatePricing();\n  calculateTotal();\n  updateVehicleName();\n  updatePickupLocation();\n  updateDateDisplays();\n  updateExtras();\n  updateDynamicValues();\n}\n\n/**\n * Calculates and updates the duration display\n * Updates both display element and hidden input field\n */\nfunction calculateDuration() {\n  const pickupDate = flatpickr(\"#datetimes-pickup\").selectedDates[0];\n  const returnDate = flatpickr(\"#datetimes-return\").selectedDates[0];\n  const durationElement = document.getElementById(\"v-duration\");\n  const durationInput = document.querySelector('input[name=\"v-duration\"]');\n\n  if (!durationElement) {\n    console.error(\"Duration element not found\");\n    return;\n  }\n\n  if (pickupDate && returnDate) {\n    // Calculate duration in days\n    const durationMs =\n      returnDate.setHours(0, 0, 0, 0) - pickupDate.setHours(0, 0, 0, 0);\n    const duration = Math.max(1, Math.ceil(durationMs / (1000 * 60 * 60 * 24)));\n\n    // Update duration display with proper pluralization\n    durationElement.textContent = `${duration} ${\n      duration === 1 ? \"day\" : \"days\"\n    }`;\n    durationElement.dataset.value = duration;\n\n    // Update hidden input field\n    if (durationInput) {\n      durationInput.value = duration;\n    }\n  } else {\n    // Clear duration if dates are not selected\n    durationElement.textContent = \"-\";\n    durationElement.removeAttribute(\"data-value\");\n    if (durationInput) {\n      durationInput.value = \"\";\n    }\n  }\n}\n\n/**\n * Updates the vehicle name display based on selected vehicle\n * Updates both display element and hidden input field\n */\nfunction updateVehicleName() {\n  const selectedVehicle = document.querySelector(\n    'input[name=\"vehicle\"]:checked'\n  );\n  const vehicleNameElement = document.getElementById(\"v-vehicle-name\");\n  const vehicleNameInput = document.querySelector(\n    'input[name=\"v-vehicle-name\"]'\n  );\n\n  if (!vehicleNameElement) {\n    console.error(\"Vehicle name element not found\");\n    return;\n  }\n\n  if (selectedVehicle) {\n    // Get vehicle name from label next to radio button\n    const vehicleName = selectedVehicle.nextElementSibling.textContent;\n    vehicleNameElement.textContent = vehicleName;\n    vehicleNameElement.dataset.value = vehicleName;\n\n    // Update hidden input field\n    if (vehicleNameInput) {\n      vehicleNameInput.value = vehicleName;\n    }\n  } else {\n    // Clear vehicle name if none selected\n    vehicleNameElement.textContent = \"-\";\n    vehicleNameElement.removeAttribute(\"data-value\");\n    if (vehicleNameInput) {\n      vehicleNameInput.value = \"\";\n    }\n  }\n}\n\n/**\n * Initializes pickup location functionality\n */\nexport function initializePickupLocation() {\n  const locationInput = document.getElementById(\"i-current-location\");\n  if (locationInput) {\n    locationInput.addEventListener(\"input\", updatePickupLocation);\n    // Initial update\n    updatePickupLocation();\n  }\n}\n\n/**\n * Updates the pickup location display\n * Syncs input value with display element\n */\nfunction updatePickupLocation() {\n  const locationInput = document.getElementById(\"i-current-location\");\n  const locationDisplay = document.getElementById(\"v-current-location\");\n\n  if (!locationInput || !locationDisplay) {\n    console.warn(\"Location elements not found\");\n    return;\n  }\n\n  const locationValue = locationInput.value.trim();\n  locationDisplay.textContent = locationValue || \"-\";\n  locationDisplay.dataset.value = locationValue;\n}\n\n/**\n * Updates the date displays for pickup and return dates\n * Initializes date pickers if not already set\n */\nfunction updateDateDisplays() {\n  const pickupPicker = flatpickr(\"#datetimes-pickup\");\n  const returnPicker = flatpickr(\"#datetimes-return\");\n\n  if (pickupPicker && returnPicker) {\n    // Get selected dates or use defaults\n    const pickupDate =\n      pickupPicker.selectedDates[0] ||\n      pickupPicker.latestSelectedDateObj ||\n      new Date();\n    const returnDate =\n      returnPicker.selectedDates[0] ||\n      returnPicker.latestSelectedDateObj ||\n      new Date(pickupDate.getTime() + 5 * 24 * 60 * 60 * 1000); // Default 5 days rental\n\n    // Update date displays\n    updateDateElement(\"v-date-pickup\", pickupDate);\n    updateDateElement(\"v-date-return\", returnDate);\n\n    // Initialize pickers with default dates if not set\n    if (!pickupPicker.selectedDates.length) pickupPicker.setDate(pickupDate);\n    if (!returnPicker.selectedDates.length) returnPicker.setDate(returnDate);\n  }\n}\n\n/**\n * Updates a date element with formatted date string\n * @param {string} elementId - ID of the element to update\n * @param {Date} date - Date object to format and display\n */\nfunction updateDateElement(elementId, date) {\n  const element = document.getElementById(elementId);\n  if (element) {\n    if (date) {\n      // Format date with time for display\n      const formattedDate = date.toLocaleString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n      });\n      element.textContent = formattedDate;\n      // Store date without time in dataset\n      element.dataset.value = date.toLocaleString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n    } else {\n      // Clear date display if no date provided\n      element.textContent = \"-\";\n      element.removeAttribute(\"data-value\");\n    }\n  }\n}\n\n/**\n * Updates all elements with IDs starting with \"v-\" using their dataset values\n */\nfunction updateDynamicValues() {\n  document.querySelectorAll('[id^=\"v-\"]').forEach((element) => {\n    const value = element.dataset.value;\n    if (value) element.textContent = value;\n  });\n}\n\n/**\n * Updates pricing for all extra items and calculates total extras\n * Handles checkbox states, quantities, and price calculations\n */\nfunction updateExtras() {\n  // Configuration for extra items\n  const extras = [\n    {\n      checkbox: \"extra_0\",\n      price: \"v-price-extra_0\",\n      quantity: \"extra-quantity_0\",\n      basePrice: 120.0,\n    },\n    {\n      checkbox: \"extra_2\",\n      price: \"v-price-extra_2\",\n      quantity: \"extra-quantity_2\",\n      basePrice: 165.0,\n    },\n    {\n      checkbox: \"extra_3\",\n      price: \"v-price-extra_3\",\n      quantity: \"extra-quantity_3\",\n      basePrice: 220.0,\n    },\n    {\n      checkbox: \"extra_4\",\n      price: \"v-price-extra_4\",\n      quantity: \"extra-quantity_4\",\n      basePrice: 1100.0,\n    },\n  ];\n\n  let totalExtras = 0;\n  const defaultQuantity = 1;\n  const maxQuantity = 5;\n\n  // Process each extra item\n  extras.forEach((extra) => {\n    const checkbox = document.getElementById(extra.checkbox);\n    const priceElement = document.getElementById(extra.price);\n    const quantityInput = document.getElementById(extra.quantity);\n\n    if (checkbox && priceElement && quantityInput) {\n      if (checkbox.checked) {\n        // Enable and configure quantity input\n        quantityInput.disabled = false;\n        quantityInput.min = 1;\n        quantityInput.max = 5;\n\n        // Ensure quantity is within valid range\n        const quantity = Math.min(\n          Math.max(parseInt(quantityInput.value) || defaultQuantity, 1),\n          maxQuantity\n        );\n        quantityInput.value = quantity;\n\n        // Calculate price for this extra\n        const nadPrice = extra.basePrice * quantity;\n\n        // Update price element with NAD and converted values\n        priceElement.dataset.nadValue = nadPrice.toFixed(2);\n        priceElement.dataset.convertedValue = (\n          nadPrice * getState().exchangeRate\n        ).toFixed(2);\n        priceElement.textContent = formatPrice(nadPrice);\n\n        totalExtras += nadPrice;\n      } else {\n        // Clear price element and disable quantity input if unchecked\n        priceElement.textContent = \"-\";\n        priceElement.removeAttribute(\"data-nad-value\");\n        priceElement.removeAttribute(\"data-converted-value\");\n        quantityInput.disabled = true;\n        quantityInput.value = \"\";\n      }\n    }\n  });\n\n  // Update total extras display\n  const totalExtrasElement = document.getElementById(\"v-price-total-extra\");\n  if (totalExtrasElement) {\n    totalExtrasElement.dataset.nadValue = totalExtras.toFixed(2);\n    totalExtrasElement.dataset.convertedValue = (\n      totalExtras * getState().exchangeRate\n    ).toFixed(2);\n    totalExtrasElement.textContent = formatPrice(totalExtras);\n  }\n}\n\n/**\n * Initializes all dynamic updates and event listeners\n * Sets up handlers for inputs, extras, and location changes\n */\nexport function initializeDynamicUpdates() {\n  // Add listeners to all input and select elements\n  document.querySelectorAll(\"input, select\").forEach((input) => {\n    if (input.id !== \"pickup-error-wrapper\") {\n      input.addEventListener(\"change\", updateBookingDetails);\n      if (input.type !== \"checkbox\" && input.type !== \"radio\") {\n        input.addEventListener(\"input\", updateBookingDetails);\n      }\n    }\n  });\n\n  // Initialize extra item handlers\n  [\"extra_0\", \"extra_2\", \"extra_3\", \"extra_4\"].forEach((id) => {\n    const checkbox = document.getElementById(id);\n    const quantityInput = document.getElementById(\n      `extra-quantity_${id.slice(-1)}`\n    );\n\n    if (checkbox && quantityInput) {\n      // Handle checkbox changes\n      checkbox.addEventListener(\"change\", () => {\n        quantityInput.disabled = !checkbox.checked;\n        quantityInput.value = checkbox.checked ? \"1\" : \"\";\n        updateBookingDetails();\n      });\n\n      // Handle quantity input changes\n      quantityInput.addEventListener(\"input\", () => {\n        let value = parseInt(quantityInput.value) || 1;\n        value = Math.min(Math.max(value, 1), 5);\n        quantityInput.value = value;\n        updateBookingDetails();\n      });\n    }\n  });\n\n  // Initialize location input handlers\n  const currentLocationInput = document.getElementById(\"pickup-error-wrapper\");\n  if (currentLocationInput) {\n    currentLocationInput.addEventListener(\"input\", updatePickupLocation);\n  }\n\n  // Initialize pickup confirmation handler\n  const pickupConfirmation = document.getElementById(\"pickup-confirmation\");\n  if (pickupConfirmation) {\n    pickupConfirmation.addEventListener(\"change\", () => {\n      handlePickupConfirmationChange();\n      updateBookingDetails();\n    });\n    handlePickupConfirmationChange();\n  }\n\n  // Initialize location input handler\n  const locationInput = document.getElementById(\"current-location-2\");\n  if (locationInput) {\n    locationInput.addEventListener(\"input\", () => {\n      handlePickupConfirmationChange();\n      updateBookingDetails();\n    });\n    handlePickupConfirmationChange();\n  }\n}\n\n/**\n * Initializes the booking details module\n * Sets up initial date displays and updates\n */\nexport function initializeBookingDetails() {\n  updateDateDisplays();\n  updateBookingDetails();\n  initializeDynamicUpdates();\n}\n\n/**\n * Safe wrapper for updateBookingDetails with error handling\n * Catches and logs errors to prevent UI crashes\n */\nfunction safeUpdateBookingDetails() {\n  try {\n    calculateDuration();\n    updatePricing();\n    calculateTotal();\n    updateVehicleName();\n    updatePickupLocation();\n    updateDateDisplays();\n    updateExtras();\n    updateDynamicValues();\n  } catch (error) {\n    console.error(\"Error updating booking details:\", error);\n    // Implement fallback behavior or user notification\n  }\n}\n","import { updateBookingDetails } from \"./bookingDetails.js\";\n\n// API configuration for exchange rate service\nconst API_CONFIG = {\n  KEY: \"f8eb8575dc0df45769f9bc6c\",\n  BASE_URL: \"https://v6.exchangerate-api.com/v6\",\n};\n\n// Constants for pricing calculations\nexport const PRICING_CONSTANTS = {\n  TAX_RATE: 0.15, // 15% tax rate\n  DEFAULT_EXCHANGE_RATE: 1, // Default exchange rate when using NAD\n  BASE_PICKUP_FEE: 100.0, // Base fee for pickup service\n};\n\n// Application state management object\nconst state = {\n  currentCurrency: \"NAD\", // Default currency is Namibian Dollar\n  exchangeRate: PRICING_CONSTANTS.DEFAULT_EXCHANGE_RATE,\n};\n\n/**\n * Formats a price value according to the current currency\n * @param {number} price - The price to format\n * @returns {string} Formatted price string with currency symbol\n */\nexport function formatPrice(price) {\n  try {\n    // Use Intl.NumberFormat for standardized currency formatting\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: state.currentCurrency,\n    }).format(price * state.exchangeRate);\n  } catch (error) {\n    console.error(\"Error formatting price:\", error);\n    // Fallback formatting if Intl.NumberFormat fails\n    return `${state.currentCurrency} ${price * state.exchangeRate}`;\n  }\n}\n\n/**\n * Returns current state of currency and exchange rate\n * @returns {Object} Current state object\n */\nexport function getState() {\n  return {\n    currentCurrency: state.currentCurrency,\n    exchangeRate: state.exchangeRate,\n  };\n}\n\n/**\n * Initializes the pricing calculation module\n * Sets default currency to NAD and sets up event listeners\n */\nexport function initializePricingCalculation() {\n  // Set NAD as default selected currency\n  const nadCurrencyRadio = document.getElementById(\"currency-nad\");\n  if (nadCurrencyRadio) {\n    nadCurrencyRadio.checked = true;\n  }\n\n  addEventListeners();\n  fetchExchangeRate();\n  updateBookingDetails();\n}\n\n/**\n * Sets up event listeners for vehicle selection and currency changes\n */\nfunction addEventListeners() {\n  // Add listeners to vehicle selection radio buttons\n  document\n    .querySelectorAll('input[name=\"vehicle\"]')\n    .forEach((input) => input.addEventListener(\"change\", updateBookingDetails));\n\n  // Add listeners to currency selection radio buttons\n  document\n    .querySelectorAll('input[name=\"currency-group\"]')\n    .forEach((input) => input.addEventListener(\"change\", handleCurrencyChange));\n}\n\n/**\n * Fetches current exchange rate from API\n * Only fetches if currency is not NAD\n */\nasync function fetchExchangeRate() {\n  if (state.currentCurrency === \"NAD\") {\n    state.exchangeRate = PRICING_CONSTANTS.DEFAULT_EXCHANGE_RATE;\n    return;\n  }\n\n  try {\n    // Fetch exchange rate from API\n    const response = await fetch(\n      `${API_CONFIG.BASE_URL}/${API_CONFIG.KEY}/pair/NAD/${state.currentCurrency}`\n    );\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    if (data.result === \"success\") {\n      state.exchangeRate = data.conversion_rate;\n    } else {\n      throw new Error(data.error || \"API returned unsuccessful result\");\n    }\n  } catch (error) {\n    console.error(\"Exchange rate fetch failed:\", error);\n    // Use default exchange rate if fetch fails\n    state.exchangeRate = PRICING_CONSTANTS.DEFAULT_EXCHANGE_RATE;\n  }\n}\n\n/**\n * Handles currency change events\n * Updates state and refreshes prices\n * @param {Event} event - Currency change event\n */\nasync function handleCurrencyChange(event) {\n  const oldCurrency = state.currentCurrency;\n  state.currentCurrency = event.target.value;\n  await fetchExchangeRate();\n  updateBookingDetails();\n}\n\n/**\n * Updates the pricing display based on selected vehicle\n * Converts prices to selected currency\n */\nexport function updatePricing() {\n  const selectedVehicle = document.querySelector(\n    'input[name=\"vehicle\"]:checked'\n  );\n  const priceElement = document.getElementById(\"v-price\");\n\n  if (!priceElement) return;\n\n  if (selectedVehicle) {\n    const nadPrice = parseFloat(selectedVehicle.value);\n    const convertedPrice = nadPrice * state.exchangeRate;\n    updatePriceElementValues(priceElement, nadPrice, convertedPrice);\n  } else {\n    clearPriceElement(priceElement);\n  }\n}\n\n/**\n * Updates price element with NAD and converted values\n * @param {HTMLElement} element - Price display element\n * @param {number} nadPrice - Price in NAD\n * @param {number} convertedPrice - Price in selected currency\n */\nfunction updatePriceElementValues(element, nadPrice, convertedPrice) {\n  element.dataset.nadValue = nadPrice.toFixed(2);\n  element.dataset.convertedValue = convertedPrice.toFixed(2);\n  element.textContent = formatPrice(nadPrice);\n}\n\n/**\n * Clears price element values\n * @param {HTMLElement} element - Price display element to clear\n */\nfunction clearPriceElement(element) {\n  element.textContent = \"-\";\n  element.removeAttribute(\"data-nad-value\");\n  element.removeAttribute(\"data-converted-value\");\n}\n\n/**\n * Updates price element and corresponding input field\n * @param {string} elementId - ID of element to update\n * @param {number} value - Price value to set\n */\nfunction updatePriceElement(elementId, value) {\n  const element = document.getElementById(elementId);\n  const inputElement = document.querySelector(`input[name=\"${elementId}\"]`);\n\n  if (element) {\n    // Store original NAD value\n    element.dataset.nadValue = value.toFixed(2);\n    // Calculate and store converted value\n    const convertedValue = value * state.exchangeRate;\n    element.dataset.convertedValue = convertedValue.toFixed(2);\n    // Display formatted price\n    element.textContent = formatPrice(value);\n\n    // Update corresponding input field if it exists\n    if (inputElement) {\n      inputElement.value = value.toFixed(2);\n      inputElement.dataset.nadValue = value.toFixed(2);\n      inputElement.dataset.convertedValue = convertedValue.toFixed(2);\n    }\n  }\n}\n\n/**\n * Calculates pickup fee based on pickup confirmation status\n * @returns {number} Pickup fee amount or 0 if pickup not confirmed\n */\nfunction getPickupFee() {\n  const pickupConfirmation = document.getElementById(\"pickup-confirmation\");\n  const pickupFeeElement = document.getElementById(\"v-price-pickup\");\n\n  if (pickupConfirmation && pickupConfirmation.checked) {\n    return PRICING_CONSTANTS.BASE_PICKUP_FEE;\n  } else {\n    // Clear pickup fee display if pickup not confirmed\n    if (pickupFeeElement) {\n      pickupFeeElement.textContent = \"-\";\n      pickupFeeElement.removeAttribute(\"data-nad-value\");\n      pickupFeeElement.removeAttribute(\"data-converted-value\");\n    }\n    return 0.0;\n  }\n}\n\n/**\n * Calculates total price including vehicle price, extras, pickup fee, and tax\n */\nexport function calculateTotal() {\n  const priceElement = document.getElementById(\"v-price\");\n  const durationElement = document.getElementById(\"v-duration\");\n  const totalExtrasElement = document.getElementById(\"v-price-total-extra\");\n\n  if (!priceElement || !durationElement || !totalExtrasElement) return;\n\n  // Get base values from elements\n  const price = parseFloat(priceElement.dataset.nadValue) || 0;\n  const duration = parseInt(durationElement.dataset.value) || 0;\n  const totalExtras = parseFloat(totalExtrasElement.dataset.nadValue) || 0;\n  const currentPickupFee = getPickupFee();\n\n  // Calculate totals\n  const subtotal = price * duration;\n  const preTaxTotal = subtotal + currentPickupFee + totalExtras;\n  const tax = preTaxTotal * PRICING_CONSTANTS.TAX_RATE;\n  const subTotal = preTaxTotal + tax;\n\n  // Update all price elements\n  updatePriceElement(\"v-price-pickup\", currentPickupFee);\n  updatePriceElement(\"v-price-total-extra\", totalExtras);\n  updatePriceElement(\"v-price-tax\", tax);\n  updatePriceElement(\"v-sub-total\", subTotal);\n}\n\n/**\n * Handles changes to the location input\n * Updates pickup fee and recalculates total\n */\nexport function handleLocationChange() {\n  const locationInput = document.getElementById(\"i-current-location\");\n  const locationDisplay = document.getElementById(\"v-current-location\");\n  const pickupFeeElement = document.getElementById(\"v-price-pickup\");\n  const locationInputWrapper = document.getElementById(\"pickup-error-wrapper\");\n\n  if (!locationInput || !locationDisplay) {\n    console.warn(\"Location elements not found\");\n    return;\n  }\n\n  const locationValue = locationInput.value.trim();\n\n  // Update location display and its dataset\n  locationDisplay.textContent = locationValue || \"-\";\n  locationDisplay.dataset.value = locationValue;\n\n  // Update wrapper value if it exists\n  if (locationInputWrapper) {\n    locationInputWrapper.value = locationValue;\n  }\n\n  // Update pickup fee based on location\n  if (pickupFeeElement) {\n    if (locationValue) {\n      updatePriceElement(\"v-price-pickup\", PRICING_CONSTANTS.BASE_PICKUP_FEE);\n    } else {\n      clearPriceElement(pickupFeeElement);\n    }\n  }\n\n  calculateTotal();\n}\n\n/**\n * Handles changes to pickup confirmation checkbox\n * Shows/hides location input and updates pricing accordingly\n */\nexport function handlePickupConfirmationChange() {\n  const pickupConfirmation = document.getElementById(\"pickup-confirmation\");\n  const locationWrapper = document.getElementById(\"pickup-error-wrapper\");\n  const locationInput = document.getElementById(\"i-current-location\");\n  const pickupFeeElement = document.getElementById(\"v-price-pickup\");\n  const locationDisplay = document.getElementById(\"v-current-location\");\n\n  if (!pickupConfirmation || !locationWrapper) {\n    console.warn(\"Required elements for pickup confirmation not found\");\n    return;\n  }\n\n  const isPickupConfirmed = pickupConfirmation.checked;\n\n  // Show/hide location input based on checkbox state\n  locationWrapper.style.display = isPickupConfirmed ? \"block\" : \"none\";\n  locationWrapper.setAttribute(\"aria-hidden\", (!isPickupConfirmed).toString());\n\n  if (!isPickupConfirmed) {\n    // Clear location data when pickup not confirmed\n    if (locationInput) {\n      locationInput.value = \"\";\n      locationInput.removeAttribute(\"required\");\n    }\n\n    if (locationDisplay) {\n      locationDisplay.textContent = \"-\";\n      locationDisplay.dataset.value = \"\";\n    }\n\n    if (pickupFeeElement) {\n      clearPriceElement(pickupFeeElement);\n    }\n  } else {\n    // Make location required when confirmed\n    if (locationInput) {\n      locationInput.setAttribute(\"required\", \"\");\n      // If there's an existing value, make sure it's displayed\n      if (locationInput.value.trim()) {\n        handleLocationChange();\n      }\n    }\n  }\n\n  calculateTotal();\n}\n\n/**\n * Initializes location-related event listeners and handlers\n */\nfunction initializeLocationHandlers() {\n  const pickupCheckbox = document.getElementById(\"pickup-confirmation\");\n  const locationInput = document.getElementById(\"i-current-location\");\n\n  if (pickupCheckbox) {\n    pickupCheckbox.addEventListener(\"change\", () => {\n      handlePickupConfirmationChange();\n      updateBookingDetails();\n    });\n    // Initial state setup\n    handlePickupConfirmationChange();\n  }\n\n  if (locationInput) {\n    // Use input and change events to catch all changes\n    locationInput.addEventListener(\"input\", () => {\n      handleLocationChange();\n      updateBookingDetails();\n    });\n\n    locationInput.addEventListener(\"change\", () => {\n      handleLocationChange();\n      updateBookingDetails();\n    });\n\n    // Initial state setup if there's a value\n    if (locationInput.value.trim()) {\n      handleLocationChange();\n    }\n  }\n}\n\n// Update the DOMContentLoaded listener\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  initializeLocationHandlers();\n});\n\n// Add this helper function\nfunction logError(message, error = null) {\n  console.error(`Pickup Confirmation Error: ${message}`, error);\n  // Add your error tracking service here if available\n}\n","/**\n * Initializes form validation\n * Sets up event listeners for real-time validation\n */\nexport function initializeFormValidation() {\n  const form = document.getElementById(\"email-form\");\n  if (!form) return;\n\n  // Create debounced validation function to prevent excessive validation\n  const debouncedValidation = debounce((field) => {\n    if (field.value.trim()) {\n      if (field.type === \"email\" && !isValidEmail(field.value)) {\n        showError(field, \"Please enter a valid email address\");\n      } else {\n        clearError(field);\n      }\n    }\n  }, 300);\n\n  // Add real-time validation for all form fields\n  form.querySelectorAll(\"input, select, textarea\").forEach((field) => {\n    field.addEventListener(\"input\", () => debouncedValidation(field));\n  });\n\n  // Add submit handler\n  form.addEventListener(\"submit\", function (event) {\n    if (!validateForm()) {\n      event.preventDefault();\n    }\n  });\n}\n\n/**\n * Validates the entire form before submission\n * Checks required fields and email format\n * @returns {boolean} True if form is valid, false otherwise\n */\nfunction validateForm() {\n  let isValid = true;\n  const errors = new Map();\n  const requiredFields = document.querySelectorAll(\"[required]\");\n\n  // Check all required fields\n  requiredFields.forEach((field) => {\n    if (!field.value.trim()) {\n      isValid = false;\n      errors.set(field, \"This field is required\");\n    }\n  });\n\n  // Special validation for email field\n  const emailField = document.getElementById(\"email\");\n  if (emailField && emailField.value && !isValidEmail(emailField.value)) {\n    isValid = false;\n    errors.set(emailField, \"Please enter a valid email address\");\n  }\n\n  // Clear all previous errors first\n  requiredFields.forEach(clearError);\n\n  // Show new errors\n  errors.forEach((message, field) => showError(field, message));\n\n  return isValid;\n}\n\n// Regular expression for email validation\nconst EMAIL_REGEX = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n/**\n * Validates email format\n * @param {string} email - Email address to validate\n * @returns {boolean} True if email is valid, false otherwise\n */\nfunction isValidEmail(email) {\n  return EMAIL_REGEX.test(email);\n}\n\n/**\n * Shows error message for a field\n * @param {HTMLElement} field - Form field with error\n * @param {string} message - Error message to display\n */\nfunction showError(field, message) {\n  let errorElement = field.nextElementSibling;\n  if (!errorElement || !errorElement.classList.contains(\"error-message\")) {\n    errorElement = document.createElement(\"div\");\n    errorElement.className = \"error-message\";\n    field.parentNode.insertBefore(errorElement, field.nextSibling);\n  }\n  errorElement.textContent = message;\n  field.classList.add(\"error\");\n}\n\n/**\n * Clears error message for a field\n * @param {HTMLElement} field - Form field to clear error from\n */\nfunction clearError(field) {\n  const errorElement = field.nextElementSibling;\n  if (errorElement && errorElement.classList.contains(\"error-message\")) {\n    errorElement.textContent = \"\";\n  }\n  field.classList.remove(\"error\");\n}\n\n/**\n * Creates a debounced function that delays invoking func\n * @param {Function} func - Function to debounce\n * @param {number} wait - Milliseconds to wait before invoking\n * @returns {Function} Debounced function\n */\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n"],"names":[],"version":3,"file":"app.js.map"}